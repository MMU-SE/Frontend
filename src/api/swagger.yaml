###########################
##                       ##
## DO NOT EDIT THIS FILE ##
##                       ##
###########################
swagger: '2.0'
info:
  description: 'Inventory Manager - OpenAPI'
  version: '1.0.0'
  title: 'Inventory Manager'
schemes:
  - https
produces:
  - application/json
paths:
  /api/products:
    get:
      summary: Get products
      operationId: getProducts
      tags:
        - Products
      parameters:
        - in: query
          name: limit
          required: true
          type: number
        - in: query
          name: cursor
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaginatedProductsResponse'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
    post:
      summary: Create new product
      operationId: addProduct
      tags:
        - Products
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProductCreateRequest'
      responses:
        '201':
          description: Product successfully added
          schema:
            $ref: '#/definitions/DetailedProduct'
        '400':
          description: Invalid input parameters
        '404':
          description: Category not found
        '500':
          description: Internal server error
  /api/products/{id}:
    get:
      summary: Get single products
      operationId: getProduct
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DetailedProduct'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
    put:
      summary: Update product
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProductUpdateRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DetailedProduct'
        '400':
          description: Invalid input parameters
        '404':
          description: Category not found
        '500':
          description: Internal server error
    delete:
      summary: Delete product
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
  /api/categories:
    get:
      summary: Get categories
      operationId: getCategories
      tags:
        - Categories
      parameters:
        - in: query
          name: limit
          required: true
          type: number
        - in: query
          name: cursor
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaginatedCategoryResponse'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
    post:
      summary: Create new category
      operationId: addCategory
      tags:
        - Categories
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CategoryCreateRequest'
      responses:
        '201':
          description: Category successfully added
          schema:
            $ref: '#/definitions/DetailedCategory'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
  /api/categories/{id}:
    get:
      summary: Get single category
      operationId: getCategory
      tags:
        - Category
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DetailedCategory'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
    put:
      summary: Update category
      operationId: updateCategory
      tags:
        - Category
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CategoryUpdateRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DetailedCategory'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
    delete:
      summary: Delete category
      operationId: deleteCategory
      tags:
        - Category
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Invalid input parameters
        '409':
          description: Conflict, related items
        '500':
          description: Internal server error
  /api/products/history/{id}:
    get:
      summary: Get product history
      operationId: getHistory
      tags:
        - History
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductHistoryResponse'
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
  /api/checkin:
    post:
      summary: Check in new products
      operationId: checkIn
      tags:
        - CheckIn
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CheckInOutRequest'
      responses:
        '201':
          description: Items checked in successfully
        '400':
          description: Invalid input parameters
        '500':
          description: Internal server error
  /api/checkout:
    post:
      summary: Check out sold products
      operationId: checkOut
      tags:
        - CheckOut
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CheckInOutRequest'
      responses:
        '201':
          description: Items checked out successfully
        '400':
          description: Invalid input parameters
        '409':
          description: Conflict, not enugh products
        '500':
          description: Internal server error
definitions:
  Product:
    type: object
    required:
      - id
      - sku
      - productName
      - quantity
      - category
      - unitPrice
    properties:
      id:
        type: string
        format: cuid
        example: 1234567
      sku:
        type: string
        example: 'PROD-123'
      productName:
        type: string
        example: 'Blue Pencil'
      quantity:
        type: number
        example: 20
      category:
        $ref: '#/definitions/Category'
      unitPrice:
        type: number
        example: 100
  DetailedProduct:
    type: object
    required:
      - id
      - sku
      - productName
      - description
      - quantity
      - category
      - unitPrice
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
        format: cuid
        example: 1234567
      sku:
        type: string
        example: 'PROD-123'
      productName:
        type: string
        example: 'Blue Pencil'
      description:
        type: string
        example: 'Nice pencil'
      quantity:
        type: number
        example: 20
      category:
        $ref: '#/definitions/Category'
      unitPrice:
        type: number
        example: 100
      createdAt:
        type: string
        example: '2011-10-05T14:48:00.000Z'
      updatedAt:
        type: string
        example: '2011-10-05T14:48:00.000Z'
  PaginatedProductsResponse:
    type: object
    required:
      - total
      - limit
      - cursor
      - products
    properties:
      total:
        type: number
        example: 50
      limit:
        type: number
        example: 20
      cursor:
        type: string
        format: 'cuid'
        example: 1234567
      data:
        type: array
        items:
          $ref: '#/definitions/Product'
  ProductCreateRequest:
    type: object
    required:
      - sku
      - productName
      - description
      - quantity
      - categoryId
      - unitPrice
    properties:
      sku:
        type: string
        example: 'PROD-123'
      productName:
        type: string
        example: 'Blue Pencil'
      description:
        type: string
        example: 'Nice pencil'
      quantity:
        type: number
        example: 10
      categoryId:
        type: string
        format: cuid
        example: '1234567'
      unitPrice:
        type: number
        example: 100
  ProductUpdateRequest:
    type: object
    properties:
      sku:
        type: string
        example: 'PROD-123'
      productName:
        type: string
        example: 'Nice Pencil'
      quantity:
        type: number
        example: 20
      categoryId:
        type: string
        format: cuid
        example: 1234567
      description:
        type: string
        example: 'Nice pencil'
      unitPrice:
        type: number
        example: 100
  Category:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: cuid
        example: 1234567
      name:
        type: string
        example: 'Stationery'
  DetailedCategory:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: cuid
        example: 1234567
      name:
        type: string
        example: 'Stationery'
      description:
        type: string
        example: 'Home office supplies'
  PaginatedCategoryResponse:
    type: object
    required:
      - total
      - limit
      - cursor
      - categories
    properties:
      total:
        type: number
        example: 50
      limit:
        type: number
        example: 20
      cursor:
        type: string
        format: 'cuid'
        example: 1234567
      data:
        type: array
        items:
          $ref: '#/definitions/DetailedCategory'
  CategoryCreateRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: 'Office Supplies'
      description:
        type: string
        example: 'Home office stationery and items'
  CategoryUpdateRequest:
    type: object
    properties:
      name:
        type: string
        example: 'Office Supplies'
      description:
        type: string
        example: 'Home office stationery and items'
  ProductHistoryResponse:
    type: object
    required:
      - id
      - productName
      - history
    properties:
      id:
        type: string
        format: cuid
        example: 1234567
      productName:
        type: string
        example: 'Pencil'
      history:
        type: array
        items:
          $ref: '#/definitions/HistoryDefinition'
  HistoryDefinition:
    type: object
    required:
      - dateTime
      - quantity
    properties:
      dateTime:
        type: string
        format: 'date-time'
        example: '2022-03-25T14:30:00Z'
      quantity:
        type: number
        example: 20
      notes:
        type: string
        example: 'Added by Bob'
  CheckInOutRequest:
    type: object
    required:
      - productId
      - quantity
    properties:
      productId:
        type: string
        format: cuid
        example: 1234567
      quantiy:
        type: number
        example: 20
      notes:
        type: string
        example: 'Checked in by Bob'
